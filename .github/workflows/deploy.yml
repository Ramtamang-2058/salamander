name: Deploy to EC2

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy via SSH
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "üì¶ Updating and installing dependencies"
            sudo apt update
            sudo apt install -y docker.io docker-compose

            echo "üìÅ Cloning or updating repo"
            mkdir -p ~/salamander
            cd ~/salamander

            if [ ! -d ".git" ]; then
              git clone https://github.com/${{ github.repository }} .
            else
              git pull origin master
            fi

            echo "üîê Writing Firebase config"
            mkdir -p config
            echo '${{ secrets.FIREBASE_CONFIG }}' > config/salamanders-122ec-firebase-adminsdk-fbsvc-8c226bb171.json

            echo "üìÑ Handling .env file"
            # Create from existing or empty
            touch .env

            # Backup existing in case
            cp .env .env.backup.$(date +%s)

            # Write GitHub secret into temp file
            echo '${{ secrets.UNGABLE_MIXED42 }}' > .env.github

            # Merge both: env values from GitHub secret take precedence
            (
              grep -v '^#' .env.github
              grep -v '^#' .env | grep -v -E "^($(cut -d= -f1 .env.github | tr '\n' '|' | sed 's/|$//'))="
            ) > .env.merged

            mv .env.merged .env
            rm .env.github

            echo "üöÄ Starting Docker"
            docker-compose down || true
            docker-compose up -d --build

            echo "ü©∫ Running health checks"
            for i in {1..15}; do
              echo "üîç Health check $i/15"

              if ! docker-compose ps | grep -q "Up"; then
                echo "‚ùå Container not running"
                docker-compose logs app
                exit 1
              fi

              if curl -s -f http://localhost:5000/ >/dev/null 2>&1 || \
                 curl -s -f http://localhost:3000/ >/dev/null 2>&1 || \
                 curl -s -f http://localhost:8000/ >/dev/null 2>&1 || \
                 curl -s -f http://localhost:5000/health >/dev/null 2>&1; then
                echo "‚úÖ App is healthy!"
                break
              fi

              if [ $i -eq 15 ]; then
                echo "‚ùå App failed to start after 15 attempts"
                docker-compose ps
                docker-compose logs app
                break
              fi

              sleep 5
            done
          EOF
