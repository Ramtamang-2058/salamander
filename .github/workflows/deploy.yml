name: Deploy to EC2

on:
  push:
    branches:
      - master
      # - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Deploy to EC2 via SSH
        run: |
          ssh -tt -i key.pem -o StrictHostKeyChecking=no -o ServerAliveInterval=30 ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "üîç Checking docker-compose..."
            if ! command -v docker-compose &> /dev/null; then
              echo "üì¶ Installing docker-compose..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi
            docker-compose --version

            echo "üìÅ Setting up salamander directory..."
            mkdir -p ~/salamander
            cd ~/salamander

            if [ ! -d ".git" ]; then
              git clone https://github.com/${{ github.repository }} .
            else
              git pull origin master
            fi

            echo "üê≥ Rebuilding and starting containers..."
            docker-compose down || true
            docker-compose up -d --build

            echo "‚è≥ Waiting for the app to be ready..."
            for i in {1..10}; do
              STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000/)
              if [ "$STATUS_CODE" == "200" ]; then
                echo "‚úÖ App is up and responding with 200 OK"
                break
              fi
              echo "‚è≥ Still waiting... ($i/10)"
              sleep 3
              if [ $i -eq 10 ]; then
                echo "‚ùå App didn't start properly (status code: $STATUS_CODE)"
                docker-compose logs
                exit 1
              fi
            done

            echo "üöÄ Deployment complete"
          EOF
